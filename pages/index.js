import dynamic from 'next/dynamic';
import Head from 'next/head';
import Image from 'next/future/image';
import DetailCard from '../components/DetailCard';
// import BarCharts from '../components/BarCharts';
import Footer from '../components/Footer';
import styles from '../styles/Home.module.css';
import trendsData from '../data/Data_GT.json';
import trendsDataSDGs from '../data/Data_SDGs.json';
import SearchBar from '../components/SearchBar';
import Navbar from '../components/Navbar';
import SectorDropDown from '../components/SectorDropDown';
import SectorButton from '../components/SectorButton';
import heroImg from '../public/hero.png';
import { Parallax, ParallaxLayer } from '@react-spring/parallax';

const BarCharts = dynamic(() => import('../components/BarCharts'), {
  ssr: false,
});

export default function Home() {
  const positiveSectorTrendSorted = Object.keys(trendsData)
    .filter((sector) => trendsData[sector]['combined_trends_mean_change'] > 0.0)
    .sort(
      (a, b) =>
        -(
          trendsData[a]['combined_trends_mean_change'] -
          trendsData[b]['combined_trends_mean_change']
        )
    );

  const positiveSectorTrendSortedData = positiveSectorTrendSorted.map(
    (sector) => trendsData[sector]['combined_trends_mean_change']
  );

  const negativeSectorTrendSorted = Object.keys(trendsData)
    .filter((sector) => trendsData[sector]['combined_trends_mean_change'] < 0.0)
    .sort(
      (a, b) =>
        -(
          trendsData[a]['combined_trends_mean_change'] -
          trendsData[b]['combined_trends_mean_change']
        )
    );

  const negativeSectorTrendSortedData = negativeSectorTrendSorted.map(
    (sector) => trendsData[sector]['combined_trends_mean_change']
  );

  const trendsDataSorted = Object.keys(trendsData).sort(
    (a, b) =>
      -(
        trendsData[a]['combined_trends_mean_change'] -
        trendsData[b]['combined_trends_mean_change']
      )
  );
  const trendsDataSDGsSorted = Object.keys(trendsDataSDGs).sort(
    (a, b) =>
      -(
        trendsDataSDGs[a]['combined_trends_mean_change'] -
        trendsDataSDGs[b]['combined_trends_mean_change']
      )
  );

  const getDateOfWeek = (w, y) => {
    var sunday = new Date(y, 0, 1 + w * 7);
    while (sunday.getDay() !== 0) {
      sunday.setDate(sunday.getDate() - 1);
    }
    return sunday;
  };
  const _selectedTrendsData = trendsData[Object.keys(trendsData)[0]];
  const getNextWeekDate = (dt) =>
    new Date(dt.getTime() + 7 * 24 * 60 * 60 * 1000);

  const _latestDate = getDateOfWeek(
    Object.keys(_selectedTrendsData['biannually_combined_trends_mean']['2022'])
      .length,
    2022
  );
  const latestDate = _latestDate.toISOString();
  const latestDateNextWeek = getNextWeekDate(_latestDate).toISOString();
  const _lastYearDate = getDateOfWeek(
    Object.keys(_selectedTrendsData['biannually_combined_trends_mean']['2022'])
      .length,
    2021
  );
  const lastYearDate = _lastYearDate.toISOString();
  const lastYearDateNextWeek = getNextWeekDate(_lastYearDate).toISOString();

  return (
    // <div>
    //   <Head>
    //     <title>Create Next App</title>
    //     <meta name="description" content="Generated by create next app" />
    //     <link rel="icon" href="/favicon.ico" />
    //   </Head>
    //   <h1>Hello World</h1>
    // </div>
    <div className="min-h-screen">
      {/* <SectorDropDown /> */}
      {/* <Navbar /> */}
      <div className="flex-1">
        {/* <section className="my-16">
          <h1 className="text-black text-[1.5rem] font-bold text-center max-w-2xl m-auto">
            Ingin mengetahui topik apa yang banyak ditelusuri masyarakat pada
            google pada setiap sektor? Yuk cari!
          </h1>
          <SearchBar />
        </section>
        <section className="my-16">
          <h1 className="text-black text-[1.5rem] font-bold text-center max-w-2xl m-auto">
            Topik Trending
          </h1>
          <div className="flex flex-wrap justify-center">
            {Object.keys(trendsData).map((sector, index) => {
                return (
                  <>
                    <SectorButton
                      href={`/sector/${sector}`}
                      name={`${trendsData[sector]["name"]}`}
                    />
                  </>
                );
              })}
          </div>
        </section> */}

        <section className="flex justify-center items-center h-screen max-w-screen bg-[url('/hero.png')] bg-cover shadow-[inset_0_0_0_1920px_rgba(0,0,0,0.65)]">
          <div className="w-[100%] xl:w-[50%] ">
            <h1 className="text-white text-[4rem] font-bold drop-shadow-[0_10px_15px_rgba(255,255,255,0.3)]">
              UniTrend
            </h1>
            <p className="text-white text-[1.75rem] my-2 drop-shadow-[0_10px_15px_rgba(255,255,255,0.3)]">
              Presenting Data for Better Policy
            </p>
          </div>
          {/* <Image
            src={heroImg}
            alt="Futuristic city"
            className="w-screen absolute h-[auto] contrast-[110%] brightness-[70%] saturate-0 hidden xl:block"
          ></Image> */}
        </section>
        {/* <hr className="mt-10 border-[#555]" /> */}
      </div>
      {/* <Footer /> */}
    </div>
  );
}
