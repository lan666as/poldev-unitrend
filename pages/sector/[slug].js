import dynamic from 'next/dynamic';
import { useRouter } from 'next/router';
import Head from 'next/head';
import Image from 'next/image';
import DetailCard from '../../components/DetailCard';
// import BarCharts from '../components/BarCharts';
import Footer from '../../components/Footer';
import styles from '../../styles/Home.module.css';
import trendsData from '../../assets/data/Data_GT.json';
import deskripsiData from '../../assets/statics/Deskripsi_GT.json';
import Link from 'next/link';

const BarCharts = dynamic(() => import('../../components/BarCharts'), {
  ssr: false,
});
const LineCharts = dynamic(() => import('../../components/LineCharts'), {
  ssr: false,
});

function Sector({
  slug,
  selectedTrendsData,
  positiveBrandTrendSorted,
  positiveBrandTrendSortedData,
  negativeBrandTrendSorted,
  negativeBrandTrendSortedData,
  positiveWordTrendSorted,
  positiveWordTrendSortedData,
  negativeWordTrendSorted,
  negativeWordTrendSortedData,
  lastYearDate,
  lastYearDateNextWeek,
  lastYearDate2NextWeek,
  latestDate,
  latestDateNextDay,
  latestDateNextWeek,
  latestDate2NextWeek,
}) {
  return (
    // <div>
    //   <Head>
    //     <title>Create Next App</title>
    //     <meta name="description" content="Generated by create next app" />
    //     <link rel="icon" href="/favicon.ico" />
    //   </Head>
    //   <h1>Hello World</h1>
    // </div>
    <div className="min-h-screen bg-white">
      <Head>
        <title>{trendsData[slug]?.name} | UniTrend by PolDev UGM</title>
        <meta name="viewport" content="initial-scale=1.0, width=device-width" />
      </Head>
      <div className="flex-1">
        <section
          className="flex flex-col justify-center items-center h-screen max-w-screen bg-cover shadow-[inset_0_0_0_1920px_rgba(0,0,0,0.75)]"
          style={{backgroundImage: `url('/assets/images/sectors/${encodeURIComponent(slug)}.jpg')`}}
          >
          <Link href="/economic-development">
              <p className="text-white text-bold text-[1.0rem] hover:cursor-pointer">
                &#60; Back
              </p>
          </Link>
          <div>
            <h1 className="text-white text-[4rem] text-center font-bold drop-shadow-[0_5px_5px_rgba(255,255,255,0.25)]">
              {trendsData[slug]?.name}
            </h1>
          </div>
          {/* <Image
            src={heroImg}
            alt="Futuristic city"
            className="w-screen absolute h-[auto] contrast-[110%] brightness-[70%] saturate-0 hidden xl:block"
          ></Image> */}
        </section>
      </div>
      <div className="flex-1 max-w-7xl mx-auto p-10">
        {/* <section className="my-16">
          <Link href="/">
            <p className="text-black text-[1.0rem] hover:cursor-pointer">
              &#60; Back
            </p>
          </Link>
        </section> */}
        <section className="text-justify my-16">
          {/* <h1 className="text-black text-left text-[3em] md:text-[4em] font-bold">
            {trendsData[slug]?.name}
          </h1> */}
          <p className="text-black text-base my-2">{deskripsiData[slug]}</p>
        </section>
        <section className="text-justify my-16">
          <h1 className="text-black text-[2rem] font-bold">
            Tren sektor {trendsData[slug]?.name.toLowerCase()} saat ini
            dibandingkan dengan tahun lalu?
          </h1>

          <LineCharts
            trendsData2021={
              selectedTrendsData &&
              Object.values(
                selectedTrendsData['biannually_combined_trends_mean']['2021']
              )
            }
            trendsData2022={
              selectedTrendsData &&
              Object.values(
                selectedTrendsData['biannually_combined_trends_mean']['2022']
              )
            }
          />
          <p className="text-gray-400 text-[0.875rem] my-2">
            Data ini berasal dari Google Trends, dan menunjukkan hasil tren
            rata-rata seluruh kata kunci, merek dan topik umum yang kami lacak
            di sektor {trendsData[slug]?.name}.
          </p>
        </section>
        <section className="my-16 flex flex-row items-center justify-center">
          {selectedTrendsData['brand_list'].length > 0 && (
            <div className="flex flex-col items-center justify-center border border-solid border-black p-8 m-8">
              <p className="text-black text-base">
                Pencarian merek berubah sebesar
              </p>
              <h2 className="text-black text-[2rem] font-bold">
                {selectedTrendsData &&
                  selectedTrendsData['brand_trends_mean_change'] &&
                  selectedTrendsData['brand_trends_mean_change'].toFixed(1)}
                %
              </h2>
            </div>
          )}
          <div className="flex flex-col items-center justify-center border border-solid border-black p-8 m-8">
            <p className="text-black text-base">
              Pencarian topik umum berubah sebesar
            </p>
            <h2 className="text-black text-[2rem] font-bold">
              {selectedTrendsData &&
                selectedTrendsData['word_trends_mean_change'].toFixed(1)}
              %
            </h2>
          </div>
        </section>
        {selectedTrendsData['brand_list'].length > 0 && (
          <>
            <section className="text-justify my-16">
              {/* <h1 className="text-black text-[3rem] font-bold">Merek</h1> */}
              <h1 className="text-black text-[1.875rem] font-medium">
                Merek-merek pada sektor {trendsData[slug]?.name.toLowerCase()} yang mengalami peningkatan
              </h1>
              {
                positiveBrandTrendSorted.length > 0 ? (
                  <>
                  <BarCharts
                    sector={positiveBrandTrendSorted}
                    series={positiveBrandTrendSortedData}
                    fillColor="#07B0F8"
                  />
                  </>
                )
                :
                (
                  <>
                  <p className="text-black text-base my-2">Tidak ada merek pada sektor {trendsData[slug]?.name.toLowerCase()}{' '}
                  yang mengalami peningkatan.</p>
                  </>
                )
              }
            <p className="text-gray-400 text-[0.75rem]">
              Membandingkan :{' '}
              {`${lastYearDateNextWeek.slice(0, 10)} hingga ${lastYearDate2NextWeek.slice(0, 10)}`}{' '}
              dengan{' '}
              {`${latestDateNextWeek.slice(0, 10)} hingga ${latestDate2NextWeek.slice(
                0,
                10
              )}`}
            </p>
            <p className="text-gray-400 text-[0.75rem]">
              Data terakhir diambil: {latestDateNextDay.slice(0, 10)}
            </p>
            </section>
            <section className="text-justify my-16">
              <h1 className="text-black text-[1.875rem] font-medium">
                Merek-merek pada sektor {trendsData[slug]?.name.toLowerCase()}{' '}
                yang mengalami penurunan
              </h1>
              { negativeBrandTrendSorted.length > 0 ? 
              (
                <>
                <BarCharts
                  sector={negativeBrandTrendSorted}
                  series={negativeBrandTrendSortedData}
                  fillColor="#F84F07"
                />
                </>
              )
              :
              (
                <>
                <p className="text-black text-base my-2">Tidak ada merek pada sektor {trendsData[slug]?.name.toLowerCase()}{' '}
                yang mengalami penurunan.</p>
                </>
              )
              }
            <p className="text-gray-400 text-[0.75rem]">
              Membandingkan :{' '}
              {`${lastYearDateNextWeek.slice(0, 10)} hingga ${lastYearDate2NextWeek.slice(0, 10)}`}{' '}
              dengan{' '}
              {`${latestDateNextWeek.slice(0, 10)} hingga ${latestDate2NextWeek.slice(
                0,
                10
              )}`}
            </p>
            <p className="text-gray-400 text-[0.75rem]">
              Data terakhir diambil: {latestDateNextDay.slice(0, 10)}
            </p>
            </section>
          </>
        )}
        <section className="text-justify my-16">
          {/* <h1 className="text-black text-[3rem] font-bold">Topik Umum</h1> */}
          <h1 className="text-black text-[1.875rem] font-medium">
            Topik umum sektor {trendsData[slug]?.name.toLowerCase()} yang mengalami peningkatan
          </h1>
          {/* <p className="text-black text-base my-2">
            Data ini diambil dari Google Trends, dan menunjukkan persentase
            peningkatan dibandingkan periode yang sama pada tahun sebelumnya.
          </p> */}
          {positiveWordTrendSorted.length > 0 ? (
            <>
              <BarCharts
                sector={positiveWordTrendSorted}
                series={positiveWordTrendSortedData}
                fillColor="#07B0F8"
              />
            </>

          )
          :
          (
            <>
            <p className="text-black text-base my-2">Tidak ada topik umum pada sektor {trendsData[slug]?.name.toLowerCase()}{' '}
            yang mengalami peningkatan.</p>
            </>
          )}
          <p className="text-gray-400 text-[0.75rem]">
            Membandingkan :{' '}
            {`${lastYearDateNextWeek.slice(0, 10)} hingga ${lastYearDate2NextWeek.slice(0, 10)}`}{' '}
            dengan{' '}
            {`${latestDateNextWeek.slice(0, 10)} hingga ${latestDate2NextWeek.slice(
              0,
              10
            )}`}
          </p>
          <p className="text-gray-400 text-[0.75rem]">
            Data terakhir diambil: {latestDateNextDay.slice(0, 10)}
          </p>
        </section>
        <section className="text-justify my-16">
          <h1 className="text-black text-[1.875rem] font-medium">
            Topik umum sektor {trendsData[slug]?.name.toLowerCase()} yang
            mengalami penurunan
          </h1>
          {/* <p className="text-black text-base my-2">
            Data ini diambil dari Google Trends, dan menunjukkan persentase
            penurunan dibandingkan periode yang sama pada tahun sebelumnya.
          </p> */}
          {
            negativeWordTrendSorted.length > 0 ?
            (
              <>
                <BarCharts
                  sector={negativeWordTrendSorted}
                  series={negativeWordTrendSortedData}
                  fillColor="#F84F07"
                />
              </>
            )
            :
            (
              <>
              <p className="text-black text-base my-2">Tidak ada topik umum pada sektor {trendsData[slug]?.name.toLowerCase()}{' '}
              yang mengalami penurunan.</p>
              </>
            )
          }
          <p className="text-gray-400 text-[0.75rem]">
            Membandingkan :{' '}
            {`${lastYearDateNextWeek.slice(0, 10)} hingga ${lastYearDate2NextWeek.slice(0, 10)}`}{' '}
            dengan{' '}
            {`${latestDateNextWeek.slice(0, 10)} hingga ${latestDate2NextWeek.slice(
              0,
              10
            )}`}
          </p>
          <p className="text-gray-400 text-[0.75rem]">
            Data terakhir diambil: {latestDateNextDay.slice(0, 10)}
          </p>
        </section>
        {/* <hr className="mt-10 border-[#555]" /> */}
      </div>
      {/* <Footer /> */}
    </div>
  );
}

export async function getStaticPaths() {
  return {
    paths: [],
    fallback: 'blocking',
  };
}

export async function getStaticProps({ params }) {
  const { slug } = params;
  var selectedTrendsData = slug && trendsData[slug];
  const positiveBrandTrendSorted =
    selectedTrendsData &&
    selectedTrendsData['brand_list'].length > 0 &&
    Object.keys(selectedTrendsData['brand_data'])
      .filter((brand) => trendsData[slug]['brand_data'][brand] > 0.0)
      .sort(
        (a, b) =>
          -(
            trendsData[slug]['brand_data'][a] -
            trendsData[slug]['brand_data'][b]
          )
      );

  const positiveBrandTrendSortedData =
    positiveBrandTrendSorted &&
    positiveBrandTrendSorted?.map(
      (brand) => trendsData[slug]['brand_data'][brand]
    );

  const negativeBrandTrendSorted =
    selectedTrendsData &&
    Object.keys(selectedTrendsData['brand_data'])
      .filter((brand) => trendsData[slug]['brand_data'][brand] < 0.0)
      .sort(
        (a, b) =>
          -(
            trendsData[slug]['brand_data'][a] -
            trendsData[slug]['brand_data'][b]
          )
      );

  const negativeBrandTrendSortedData = negativeBrandTrendSorted?.map(
    (brand) => trendsData[slug]['brand_data'][brand]
  );

  const positiveWordTrendSorted =
    selectedTrendsData &&
    Object.keys(selectedTrendsData['word_data'])
      .filter((word) => trendsData[slug]['word_data'][word] > 0.0)
      .sort(
        (a, b) =>
          -(trendsData[slug]['word_data'][a] - trendsData[slug]['word_data'][b])
      );

  const positiveWordTrendSortedData = positiveWordTrendSorted?.map(
    (word) => trendsData[slug]['word_data'][word]
  );

  const negativeWordTrendSorted =
    selectedTrendsData &&
    Object.keys(selectedTrendsData['word_data'])
      .filter((word) => trendsData[slug]['word_data'][word] < 0.0)
      .sort(
        (a, b) =>
          -(trendsData[slug]['word_data'][a] - trendsData[slug]['word_data'][b])
      );

  const negativeWordTrendSortedData = negativeWordTrendSorted?.map(
    (word) => trendsData[slug]['word_data'][word]
  );

  const getDateOfWeek = (w, y) => {
    var sunday = new Date(y, 0, 1 + w * 7);
    while (sunday.getDay() !== 0) {
      sunday.setDate(sunday.getDate() - 1);
    }
    return sunday;
  };

  const getNextWeekDate = (dt) =>
    new Date(dt.getTime() + 7 * 24 * 60 * 60 * 1000);

  const getNextDayDate = (dt) =>
    new Date(dt.getTime() + 1 * 24 * 60 * 60 * 1000);

  const _latestDate = getDateOfWeek(
    Object.keys(selectedTrendsData['biannually_combined_trends_mean']['2022'])
      .length,
    2022
  );
  const latestDate = _latestDate.toISOString();
  const latestDateNextDay = getNextDayDate(getNextWeekDate(getNextWeekDate(_latestDate))).toISOString();
  const latestDateNextWeek = getNextDayDate(getNextWeekDate(_latestDate)).toISOString();
  const latestDate2NextWeek = getNextWeekDate(getNextWeekDate(_latestDate)).toISOString();
  const _lastYearDate = getDateOfWeek(
    Object.keys(selectedTrendsData['biannually_combined_trends_mean']['2022'])
      .length,
    2021
  );
  const lastYearDate = _lastYearDate.toISOString();
  const lastYearDateNextWeek = getNextDayDate(getNextWeekDate(_lastYearDate)).toISOString();
  const lastYearDate2NextWeek = getNextWeekDate(getNextWeekDate(_lastYearDate)).toISOString();

  // By returning { props: { posts } }, the Blog component
  // will receive `posts` as a prop at build time
  return {
    props: {
      slug,
      selectedTrendsData,
      positiveBrandTrendSorted,
      positiveBrandTrendSortedData,
      negativeBrandTrendSorted,
      negativeBrandTrendSortedData,
      positiveWordTrendSorted,
      positiveWordTrendSortedData,
      negativeWordTrendSorted,
      negativeWordTrendSortedData,
      lastYearDate,
      lastYearDateNextWeek,
      lastYearDate2NextWeek,
      latestDate,
      latestDateNextDay,
      latestDateNextWeek,
      latestDate2NextWeek,
    },
  };
}

export default Sector;
